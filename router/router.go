// file: router/router.go

package router

import (
	"go-bank-api/handler"
	"net/http"

	_ "go-bank-api/docs" // docs is generated by Swag CLI

	httpSwagger "github.com/swaggo/http-swagger/v2"
)

// NewRouter sets up all application routes and their corresponding handlers.
func NewRouter(userHandler *handler.UserHandler, accountHandler *handler.AccountHandler, transactionHandler *handler.TransactionHandler) http.Handler {
	mux := http.NewServeMux()

	// --- Public Routes ---
	mux.Handle("POST /register", handler.ErrorHandlingMiddleware(userHandler.Register))
	mux.Handle("POST /login", handler.ErrorHandlingMiddleware(userHandler.Login))
	mux.Handle("POST /api/token/refresh", handler.ErrorHandlingMiddleware(userHandler.RefreshToken))

	// --- Authenticated Routes (Requires a valid Access Token) ---
	mux.Handle("POST /api/logout", handler.AuthMiddleware(handler.ErrorHandlingMiddleware(userHandler.Logout)))
	mux.Handle("GET /api/accounts", handler.AuthMiddleware(handler.ErrorHandlingMiddleware(accountHandler.ListAccounts)))
	mux.Handle("POST /api/accounts", handler.AuthMiddleware(handler.ErrorHandlingMiddleware(accountHandler.CreateAccount)))
	mux.Handle("POST /api/accounts/{fromAccountId}/transfers", handler.AuthMiddleware(handler.ErrorHandlingMiddleware(transactionHandler.CreateTransfer)))
	mux.Handle("GET /api/accounts/{accountId}/transactions", handler.AuthMiddleware(handler.ErrorHandlingMiddleware(transactionHandler.ListTransactionsForAccount)))

	// --- Admin-only Routes (Requires Admin Role) ---
	mux.Handle("GET /api/admin/users", handler.AuthMiddleware(handler.AdminMiddleware(handler.ErrorHandlingMiddleware(userHandler.GetAllUsers))))
	mux.Handle("PATCH /api/admin/users/{id}/role",
		handler.AuthMiddleware(
			handler.AdminMiddleware(
				handler.ErrorHandlingMiddleware(userHandler.UpdateUserRole),
			),
		),
	)
	mux.Handle("GET /api/admin/accounts",
		handler.AuthMiddleware(
			handler.AdminMiddleware(
				handler.ErrorHandlingMiddleware(accountHandler.GetAllAccounts),
			),
		),
	)

	mux.Handle("POST /api/admin/accounts/{accountId}/deposit",
		handler.AuthMiddleware(
			handler.AdminMiddleware(
				handler.ErrorHandlingMiddleware(accountHandler.DepositToAccount),
			),
		),
	)

	// --- Health & Documentation ---
	mux.HandleFunc("GET /health", handler.HealthCheck)
	mux.Handle("GET /swagger/", httpSwagger.WrapHandler)

	return mux
}

# file: .github/workflows/ci.yml

name: Go Bank API CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: user_test
          POSTGRES_PASSWORD: password_test
          POSTGRES_DB: go_bank_api_test
        ports:
          - 5434:5432
        options: >-
          --health-cmd "pg_isready -U user_test -d go_bank_api_test"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      # FIX: Add a Redis service for the integration tests.
      redis:
        image: redis:7-alpine
        ports:
          # The tests connect to localhost:6379, so we map this port.
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.3'

      - name: Install Swag
        run: go install github.com/swaggo/swag/cmd/swag@latest

      - name: Generate docs
        run: swag init -g cmd/main.go

      - name: Create config file for tests
        run: |
          echo "database:" > config.yml
          echo "  host: \"localhost\"" >> config.yml
          echo "  port: 5434" >> config.yml
          echo "  user: \"user_test\"" >> config.yml
          echo "  password: \"password_test\"" >> config.yml
          echo "  name: \"go_bank_api\"" >> config.yml
          # FIX: Add Redis configuration for the test environment.
          echo "redis:" >> config.yml
          echo "  host: \"localhost\"" >> config.yml
          echo "  port: \"6379\"" >> config.yml
          echo "  password: \"\"" >> config.yml
          echo "server:" >> config.yml
          echo "  port: \"8080\"" >> config.yml
          echo "jwt:" >> config.yml
          echo "  secret_key: \"${{ secrets.JWT_SECRET_KEY }}\"" >> config.yml

      - name: Run tests
        env:
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
        run: go test -v ./...